SETS:

>>> {1, 3, 5}
{1, 3, 5}
>>> type({})
<class 'dict'>
>>> type(set())
<class 'set'>
>>> {1, 11, 13, 7, 5, 3}
{1, 3, 5, 7, 11, 13}
>>> low_primes = {1, 3, 5, 7, 11, 13}
>>> low_primes.add(17)
>>> low_primes
{1, 3, 5, 7, 11, 13, 17}
>>> low_primes.update({19, 23}, {2, 29})
>>> low_primes
{1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29}
>>> low_primes.remove(100)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 100
>>> low_primes.discard(100)
>>> while low_primes:
...     print(low_primes/3)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: unsupported operand type(s) for /: 'set' and 'int'
>>> while low_primes:
...     print(low_primes.pop()/3)
...
0.3333333333333333
0.6666666666666666
1.0
1.6666666666666667
2.3333333333333335
3.6666666666666665
4.333333333333333
5.666666666666667
6.333333333333333
7.666666666666667
9.666666666666666
>>>


UNIONS:

>>> set1 = set(range(10))
>>> set2 = {1, 2, 3, 5, 7, 11, 13, 17, 19, 23}
>>> set1.union(set2)
{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 23}
>>> set1
{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
>>> set1 | set2
{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 23}
>>> set1.difference(set2)
{0, 4, 6, 8, 9}
>>> set1 - set2
{0, 4, 6, 8, 9}
>>> set1 ^ set2
{0, 4, 6, 8, 9, 11, 13, 17, 19, 23}
>>> set2.symmetric_difference(set1)
{0, 4, 6, 8, 9, 11, 13, 17, 19, 23}
>>> set1.intersection(set2)
{1, 2, 3, 5, 7}
>>> set1 & set2
{1, 2, 3, 5, 7}
>>>